[{"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\index.js":"1","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\reportWebVitals.js":"2","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\App.js":"3","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\route.js":"4","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Main Page\\main.jsx":"5","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Login Page\\login.jsx":"6","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\firebase.js":"7","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\navbar.jsx":"8","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Message\\message.jsx":"9","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Loader\\loader.jsx":"10","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\drawer.jsx":"11","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\store.js":"12","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Reducer\\reducer.js":"13","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.types.js":"14","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.js":"15","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\serviceWorkerRegistration.js":"16"},{"size":1016,"mtime":1616527726467,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1611340898412,"results":"19","hashOfConfig":"18"},{"size":775,"mtime":1612540176299,"results":"20","hashOfConfig":"18"},{"size":430,"mtime":1611212681138,"results":"21","hashOfConfig":"22"},{"size":14383,"mtime":1616787533668,"results":"23","hashOfConfig":"18"},{"size":5776,"mtime":1616749824008,"results":"24","hashOfConfig":"18"},{"size":639,"mtime":1616748749976,"results":"25","hashOfConfig":"18"},{"size":1514,"mtime":1616749347290,"results":"26","hashOfConfig":"18"},{"size":11203,"mtime":1616829575854,"results":"27","hashOfConfig":"18"},{"size":410,"mtime":1612178704898,"results":"28","hashOfConfig":"18"},{"size":10496,"mtime":1616765714870,"results":"29","hashOfConfig":"18"},{"size":309,"mtime":1612339649489,"results":"30","hashOfConfig":"18"},{"size":1006,"mtime":1616829178371,"results":"31","hashOfConfig":"18"},{"size":199,"mtime":1616829196432,"results":"32","hashOfConfig":"18"},{"size":639,"mtime":1616829188956,"results":"33","hashOfConfig":"18"},{"size":5149,"mtime":1612379779806,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"11z8bo8",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nng4n0",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\index.js",[],["72","73","74","75","76"],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\reportWebVitals.js",[],["77","78","79","80","81"],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\App.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\route.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Main Page\\main.jsx",["82"],"/* eslint-disable no-bitwise */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { Paper, Button, IconButton, useMediaQuery } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { PhotoCamera } from \"@material-ui/icons\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport WifiOffIcon from \"@material-ui/icons/WifiOff\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n// import GroupsIcon from \"@material-ui/icons/GroupWork\";\r\n// import ExploreIcon from \"@material-ui/icons/Explore\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { Offline } from \"react-detect-offline\";\r\nimport { auth, db, storage, realDB } from \"../../firebase\";\r\nimport { setUserInfo } from \"../../Redux/Action/action\";\r\nimport Navbar from \"../Layout/navbar\";\r\nimport Message from \"../Message/message\";\r\nimport styles from \"./main.module.scss\";\r\nimport Loader from \"../Loader/loader\";\r\n\r\nimport sendAudio from \"../../Message Sounds/among_us_chat_sound.mp3\";\r\n// import recieveAudio from \"../../Message Sounds/facebook_chat_sound.mp3\";\r\n\r\nconst previewImgVariant = {\r\n  in: {\r\n    y: 0,\r\n    opacity: 1,\r\n  },\r\n  out: {\r\n    y: \"100%\",\r\n    opacity: 0,\r\n    transition: {\r\n      duration: 1,\r\n    },\r\n  },\r\n};\r\n\r\nconst sendButtonVariants = {\r\n  open: { x: [0, 100] },\r\n  closed: { x: [-10, 0] },\r\n};\r\n\r\nfunction Main() {\r\n  console.log(\"main Rendering\");\r\n  // -----------------Setting Up the Dark Theme------------------------//\r\n  const isDarkTheme = useSelector((state) => state.CONFIG.darkTheme);\r\n  const palletType = isDarkTheme ? \"dark\" : \"light\";\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: palletType,\r\n    },\r\n  });\r\n  // -----------------Setting Up the Dark Theme------------------------//\r\n\r\n  const dispatch = useDispatch();\r\n  const [senderImg, setSenderImg] = useState(null);\r\n  const [imgPreview, setImgPreview] = useState(null);\r\n  const [uploadLoader, setUplaodLoader] = useState(false);\r\n  const [messages, setMessages] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [aniSendBtn, setAniSendBtn] = useState(false);\r\n  const [user, setUser] = useState(() => auth.currentUser);\r\n  const [userDetails, setUserDetails] = useState({\r\n    displayName: \"\",\r\n    displayPhoto: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const unsub = db\r\n      .collection(\"messages\")\r\n      .orderBy(\"createdAt\")\r\n      .limitToLast(15)\r\n      .onSnapshot((snapshot) => {\r\n        setMessages(\r\n          snapshot.docs.map((doc) => ({ id: doc.id, msg: doc.data() }))\r\n        );\r\n      });\r\n    return unsub;\r\n  }, []);\r\n  const history = useHistory();\r\n  const emptyDiv = useRef();\r\n  const matches = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const [message, setMessage] = useState({\r\n    text: \"\",\r\n    rows: 1,\r\n    minRows: 1,\r\n    maxRows: 4,\r\n  });\r\n\r\n  const handleTextboxChange = (event) => {\r\n    const textareaLineHeight = 27;\r\n\r\n    const previousRows = event.target.rows;\r\n    event.target.rows = message.minRows; // reset number of rows in textarea\r\n\r\n    const currentRows = ~~(event.target.scrollHeight / textareaLineHeight);\r\n\r\n    if (currentRows === previousRows) {\r\n      event.target.rows = currentRows;\r\n    }\r\n\r\n    if (currentRows >= message.maxRows) {\r\n      event.target.rows = message.maxRows;\r\n      event.target.scrollTop = event.target.scrollHeight;\r\n    }\r\n\r\n    setMessage({\r\n      ...message,\r\n      text: event.target.value,\r\n      rows: currentRows < message.maxRows ? currentRows : message.maxRows,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsub = () => {\r\n      if (emptyDiv.current) {\r\n        emptyDiv.current.scrollIntoView({\r\n          inline: \"center\",\r\n          behavior: \"smooth\",\r\n          alignToTop: false,\r\n        });\r\n      }\r\n    };\r\n    unsub()\r\n    return unsub;\r\n  }, [messages]);\r\n\r\n  useEffect(async () => {\r\n    // eslint-disable-next-line no-shadow\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUser(user);\r\n        dispatch(setUserInfo(user));\r\n        setUserDetails({\r\n          displayName: user.displayName,\r\n          displayPhoto: user.photoURL,\r\n        });\r\n        setLoading(false);\r\n        history.push(\"/\");\r\n      } else {\r\n        setUser(null);\r\n        history.push(\"/login\");\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      if (user && (message.text !== \"\" || senderImg !== null)) {\r\n        setAniSendBtn(true);\r\n        const { uid, photoURL, displayName } = user;\r\n        if (message.text !== \"\" && senderImg === null) {\r\n          await db.collection(\"messages\").add({\r\n            text: message.text,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            uid,\r\n            photoURL,\r\n            displayName,\r\n          });\r\n          // eslint-disable-next-line no-undef\r\n          new Audio(sendAudio).play();\r\n          setMessage({\r\n            ...message,\r\n            text: \"\",\r\n            rows: 1,\r\n          });\r\n        } else if (message.text === \"\" && senderImg !== null) {\r\n          setUplaodLoader(true);\r\n          const storageRef = storage.ref();\r\n          const fileRef = storageRef.child(\r\n            `imgMessages/${uuidv4()}-${senderImg.name}`\r\n          );\r\n          await fileRef.put(senderImg);\r\n          setSenderImg(null);\r\n          const fileUrl = await fileRef.getDownloadURL();\r\n          await db.collection(\"messages\").add({\r\n            photoMsg: fileUrl,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            uid,\r\n            photoURL,\r\n            displayName,\r\n          });\r\n          // eslint-disable-next-line no-undef\r\n          new Audio(sendAudio).play();\r\n          setUplaodLoader(false);\r\n        } else if (message.text !== \"\" && senderImg !== null) {\r\n          const tempTextmsg = message.text;\r\n          setMessage({\r\n            ...message,\r\n            text: \"\",\r\n            rows: 1,\r\n          });\r\n          setUplaodLoader(true);\r\n          const storageRef = storage.ref();\r\n          const fileRef = storageRef.child(\r\n            `imgMessages/${uuidv4()}-${senderImg.name}`\r\n          );\r\n          await fileRef.put(senderImg);\r\n          setSenderImg(null);\r\n          const fileUrl = await fileRef.getDownloadURL();\r\n          await db.collection(\"messages\").add({\r\n            text: tempTextmsg,\r\n            photoMsg: fileUrl,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            uid,\r\n            photoURL,\r\n            displayName,\r\n          });\r\n          setUplaodLoader(false);\r\n          // eslint-disable-next-line no-undef\r\n          new Audio(sendAudio).play();\r\n        }\r\n        setTimeout(() => setAniSendBtn(false), 500);\r\n      } else {\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleImgChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setSenderImg(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!senderImg) {\r\n      setImgPreview(null);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(senderImg);\r\n    setImgPreview(objectUrl);\r\n    emptyDiv.current.scrollIntoView({ behavior: \"smooth\" });\r\n    // Unmount\r\n    // eslint-disable-next-line consistent-return\r\n    return () => URL.revokeObjectURL(objectUrl);\r\n  }, [senderImg]);\r\n\r\n  const handleImgCancel = () => {\r\n    setSenderImg(null);\r\n    emptyDiv.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Paper\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ when: \"beforeChildren\", staggerChildren: 0.4 }}\r\n        className={styles.container}\r\n        component={motion.div}\r\n      >\r\n        {loading ? (\r\n          <div style={{ width: \"100%\", height: \"100vh\", background: \"#000\" }}>\r\n            <Loader />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Navbar displayPic={userDetails.displayPhoto} />\r\n            <Offline>\r\n              <div className={styles.offlineDiv}>\r\n                <div>\r\n                  <span>You&apos;re Offline</span>\r\n                  <WifiOffIcon />\r\n                </div>\r\n              </div>\r\n            </Offline>\r\n            <div>\r\n              <main className={styles.main}>\r\n                {messages &&\r\n                  user &&\r\n                  messages.map(({ id, msg }) => (\r\n                    <Message key={id} msgId={id} message={msg} />\r\n                  ))}\r\n                {senderImg && (\r\n                  <AnimatePresence>\r\n                    <motion.div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        margin: \"10px 0\",\r\n                      }}\r\n                      variants={previewImgVariant}\r\n                      initial=\"out\"\r\n                      animate=\"in\"\r\n                      exit=\"out\"\r\n                      transition={{\r\n                        stiffness: 50,\r\n                        default: { duration: 1 },\r\n                      }}\r\n                    >\r\n                      <motion.div\r\n                        style={{\r\n                          borderColor: `${\r\n                            isDarkTheme ? \"rgb(173, 85, 255)\" : \"#505050\"\r\n                          }`,\r\n                        }}\r\n                        className={styles.imgPreviewDivSend}\r\n                      >\r\n                        {!uploadLoader && (\r\n                          <IconButton\r\n                            onClick={handleImgCancel}\r\n                            className={styles.cancelPreviewBtn}\r\n                          >\r\n                            <CancelIcon />\r\n                          </IconButton>\r\n                        )}\r\n\r\n                        {uploadLoader ? (\r\n                          <div className={styles.uploadLoader}>\r\n                            <img\r\n                              src=\"https://s2.svgbox.net/loaders.svg?ic=elastic-spinner&color=000000\"\r\n                              width=\"32\"\r\n                              height=\"32\"\r\n                              alt=\"uplaod loader\"\r\n                            />\r\n                          </div>\r\n                        ) : (\r\n                          <Button\r\n                            onClick={sendMessage}\r\n                            className={styles.uploadBtn}\r\n                            variant=\"contained\"\r\n                          >\r\n                            Upload\r\n                          </Button>\r\n                        )}\r\n                        <img\r\n                          className={styles.imgPreview}\r\n                          src={imgPreview}\r\n                          alt=\"preview\"\r\n                        />\r\n                      </motion.div>\r\n                    </motion.div>\r\n                  </AnimatePresence>\r\n                )}\r\n\r\n                <span\r\n                  style={{\r\n                    position: \"relative\",\r\n                    width: \"100%\",\r\n                    marginBottom: \"60px\",\r\n                  }}\r\n                  ref={emptyDiv}\r\n                ></span>\r\n              </main>\r\n              <form\r\n                className={styles.form}\r\n                style={{\r\n                  background: `${isDarkTheme ? \"#181818\" : \"rgb(255 179 36)\"}`,\r\n                }}\r\n                onSubmit={sendMessage}\r\n              >\r\n                <Paper\r\n                  elevation={0}\r\n                  style={{\r\n                    flex: \"1\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    borderRadius: \"20px\",\r\n                    padding: `${matches ? \"0 10px\" : \"0 13px\"}`,\r\n                    transition: \"ease-in-out 300ms\",\r\n                  }}\r\n                >\r\n                  <textarea\r\n                    rows={message.rows}\r\n                    value={message.text}\r\n                    placeholder=\"Send a message...\"\r\n                    className={styles.textBox}\r\n                    onChange={handleTextboxChange}\r\n                  />\r\n                </Paper>\r\n                <div>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    onChange={handleImgChange}\r\n                    id=\"icon-button-file\"\r\n                    type=\"file\"\r\n                    style={{ display: \"none\" }}\r\n                  />\r\n                  {matches && message.text ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <label htmlFor=\"icon-button-file\">\r\n                      <IconButton\r\n                        aria-label=\"upload picture\"\r\n                        component=\"span\"\r\n                        style={{ color: \"#4a4a4a\" }}\r\n                        size=\"small\"\r\n                      >\r\n                        <PhotoCamera />\r\n                      </IconButton>\r\n                    </label>\r\n                  )}\r\n                </div>\r\n                <IconButton\r\n                  aria-label=\"send message\"\r\n                  onClick={sendMessage}\r\n                  type=\"submit\"\r\n                  style={{ color: \"#4a4a4a\" }}\r\n                >\r\n                  <motion.div\r\n                    animate={aniSendBtn ? \"open\" : \"closed\"}\r\n                    variants={sendButtonVariants}\r\n                    transition={{\r\n                      duration: 0.5,\r\n                      ease: \"easeInOut\",\r\n                    }}\r\n                    style={{ display: \"flex\", alignItems: \"center\" }}\r\n                  >\r\n                    <SendIcon />\r\n                  </motion.div>\r\n                </IconButton>\r\n              </form>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default React.memo(Main);\r\n","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Login Page\\login.jsx",["83"],"/* eslint-disable no-else-return */\r\n/* eslint-disable no-useless-return */\r\n/* eslint-disable vars-on-top */\r\n/* eslint-disable no-var */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { Paper, Button } from \"@material-ui/core\";\r\nimport { motion } from \"framer-motion\";\r\nimport cx from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth, realDB, db } from \"../../firebase\";\r\nimport styles from \"./login.module.scss\";\r\nimport OpenChat1 from \"./images/OpenChat-1.webp\";\r\nimport OpenChat2 from \"./images/OpenChat-2.webp\";\r\nimport OpenChat3 from \"./images/OpenChat-3.webp\";\r\nimport Loader from \"../Loader/loader\";\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const signInWithGoogle = async () => {\r\n    auth.useDeviceLanguage();\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    try {\r\n      await auth.signInWithPopup(provider).then(async () => {\r\n        if (auth.currentUser) {\r\n          var user = auth.currentUser;\r\n          const userRef = realDB.ref(`users/${user.uid}`);\r\n          userRef.once(\"value\", (snapshot) => {\r\n            console.log(snapshot.val());\r\n            console.log(\"running through check...\");\r\n            if (snapshot.exists()) {\r\n              console.log(\"exists!...exiting---->\");\r\n              return;\r\n            } else {\r\n              realDB.ref(`users/${user.uid}`).set({\r\n                userId: user.uid,\r\n                displayName: user.displayName,\r\n                displayPic: user.photoURL,\r\n              });\r\n            }\r\n          });\r\n        }\r\n        history.push(\"/\");\r\n      });\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n\r\n  // const signInWithGithub = async () => {\r\n  //   auth.useDeviceLanguage();\r\n  //   const provider = new firebase.auth.GithubAuthProvider();\r\n  //   try {\r\n  //     await auth.signInWithPopup(provider).then(() => {\r\n  //       history.push(\"/\");\r\n  //     });\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line no-shadow\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        history.push(\"/\");\r\n        setLoading(false);\r\n      } else {\r\n        history.push(\"/login\");\r\n        setLoading(false);\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 1 }}\r\n      className={styles.container}\r\n    >\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <div className={cx(styles.firstSection, styles.section)}>\r\n            <img className={styles.img1} src={OpenChat2} alt=\"graphic images\" />\r\n            <img className={styles.img2} src={OpenChat3} alt=\"graphic images\" />\r\n          </div>\r\n          <div className={cx(styles.secondSection, styles.section)}>\r\n            <Paper elevation={5} className={cx(styles.card, styles.section)}>\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <span className={styles.header1}>Welcome to </span>\r\n                <br />\r\n                <span className={styles.header2}>OpenChat</span>\r\n              </div>\r\n\r\n              <Button\r\n                onClick={signInWithGoogle}\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                className={styles.button}\r\n              >\r\n                <span\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    verticalAlign: \"midlle\",\r\n                    margin: \"8px 0px 8px 8px\",\r\n                    width: \"18px\",\r\n                    height: \"18px\",\r\n                    boxSizing: \"border-box\",\r\n                  }}\r\n                >\r\n                  <svg viewBox=\"0 0 366 372\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path\r\n                      d=\"M125.9 10.2c40.2-13.9 85.3-13.6 125.3 1.1 22.2 8.2 42.5 21 59.9 37.1-5.8 6.3-12.1 12.2-18.1 18.3l-34.2 34.2c-11.3-10.8-25.1-19-40.1-23.6-17.6-5.3-36.6-6.1-54.6-2.2-21 4.5-40.5 15.5-55.6 30.9-12.2 12.3-21.4 27.5-27 43.9-20.3-15.8-40.6-31.5-61-47.3 21.5-43 60.1-76.9 105.4-92.4z\"\r\n                      id=\"Shape\"\r\n                      fill=\"#EA4335\"\r\n                    />\r\n                    <path\r\n                      d=\"M20.6 102.4c20.3 15.8 40.6 31.5 61 47.3-8 23.3-8 49.2 0 72.4-20.3 15.8-40.6 31.6-60.9 47.3C1.9 232.7-3.8 189.6 4.4 149.2c3.3-16.2 8.7-32 16.2-46.8z\"\r\n                      id=\"Shape\"\r\n                      fill=\"#FBBC05\"\r\n                    />\r\n                    <path\r\n                      d=\"M361.7 151.1c5.8 32.7 4.5 66.8-4.7 98.8-8.5 29.3-24.6 56.5-47.1 77.2l-59.1-45.9c19.5-13.1 33.3-34.3 37.2-57.5H186.6c.1-24.2.1-48.4.1-72.6h175z\"\r\n                      id=\"Shape\"\r\n                      fill=\"#4285F4\"\r\n                    />\r\n                    <path\r\n                      d=\"M81.4 222.2c7.8 22.9 22.8 43.2 42.6 57.1 12.4 8.7 26.6 14.9 41.4 17.9 14.6 3 29.7 2.6 44.4.1 14.6-2.6 28.7-7.9 41-16.2l59.1 45.9c-21.3 19.7-48 33.1-76.2 39.6-31.2 7.1-64.2 7.3-95.2-1-24.6-6.5-47.7-18.2-67.6-34.1-20.9-16.6-38.3-38-50.4-62 20.3-15.7 40.6-31.5 60.9-47.3z\"\r\n                      fill=\"#34A853\"\r\n                    />\r\n                  </svg>\r\n                </span>\r\n                <span style={{ marginLeft: \"5px\" }}> Sign in with Google</span>\r\n              </Button>\r\n            </Paper>\r\n          </div>\r\n\r\n          <div className={cx(styles.thirdSection, styles.section)}>\r\n            <img src={OpenChat1} alt=\"graphic images\" />\r\n          </div>\r\n        </>\r\n      )}\r\n    </motion.div>\r\n  );\r\n}\r\n","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\firebase.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\navbar.jsx",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Message\\message.jsx",["84"],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Loader\\loader.jsx",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\drawer.jsx",["85"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Drawer, IconButton, Button } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {\r\n  drawerToggle,\r\n  themeToggle,\r\n  setUserInfo,\r\n} from \"../../Redux/Action/action\";\r\nimport { auth } from \"../../firebase\";\r\nimport styles from \"./drawer.module.scss\";\r\nimport BMClogo from \"./bmc-button.webp\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\n\r\nconst drawerVariants = {\r\n  hidden: {\r\n    opacity: 0,\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    transition: {\r\n      duration: 2,\r\n      ease: \"easeInOut\",\r\n    },\r\n  },\r\n};\r\n\r\nconst svgVariants = {\r\n  hidden: {\r\n    rotate: -180,\r\n  },\r\n  visible: {\r\n    rotate: 0,\r\n    transition: {\r\n      duration: 1,\r\n    },\r\n  },\r\n};\r\n\r\nconst pathVariants = {\r\n  hidden: {\r\n    opacity: 0,\r\n    pathLength: 0,\r\n    color: \"#fff\",\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    pathLength: 1,\r\n    color: \"rgb(173, 85, 255)\",\r\n    transition: {\r\n      duration: 2,\r\n      ease: \"easeInOut\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction DrawerBox() {\r\n  console.log(\"Rendering\");\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const isOpen = useSelector((state) => state.CONFIG.drawerOpen);\r\n  const isDarkTheme = useSelector((state) => state.CONFIG.darkTheme);\r\n  const isServiceWorkerUpdated = useSelector(\r\n    (state) => state.CONFIG.serviceWorkerUpdated\r\n  );\r\n  const serviceWorkerRegistration = useSelector(\r\n    (state) => state.CONFIG.serviceWorkerRegistration\r\n  );\r\n  const userInfo = useSelector((state) => state.CONFIG.userInfo);\r\n\r\n  const updateServiceWorker = () => {\r\n    const registrationWaiting = serviceWorkerRegistration.waiting;\r\n\r\n    if (registrationWaiting) {\r\n      registrationWaiting.postMessage({ type: \"SKIP_WAITING\" });\r\n\r\n      registrationWaiting.addEventListener(\"statechange\", (e) => {\r\n        if (e.target.state === \"activated\") {\r\n          // eslint-disable-next-line no-undef\r\n          window.location.reload();\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const toggleDrawer = () => async (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    await dispatch(drawerToggle());\r\n  };\r\n\r\n  const handleChecked = async () => {\r\n    await dispatch(themeToggle());\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await auth.signOut();\r\n      dispatch(drawerToggle());\r\n      dispatch(setUserInfo(null));\r\n      history.push(\"/login\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      component={motion.div}\r\n      variants={drawerVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      onClose={toggleDrawer(false)}\r\n      anchor=\"left\"\r\n      open={isOpen}\r\n      transitionDuration={500}\r\n    >\r\n      <List className={styles.list}>\r\n        <div className={styles.firstDiv}>\r\n          <ListItem\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <IconButton onClick={() => dispatch(drawerToggle())}>\r\n              <motion.svg\r\n                width=\"24\"\r\n                height=\"24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"currentColor\"\r\n                color=\"#000\"\r\n                variants={svgVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n              >\r\n                <motion.path\r\n                  d=\"M0 0h24v24H0z\"\r\n                  fill=\"none\"\r\n                  variants={pathVariants}\r\n                ></motion.path>\r\n                <motion.path\r\n                  d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\r\n                  variants={pathVariants}\r\n                ></motion.path>\r\n              </motion.svg>\r\n            </IconButton>\r\n          </ListItem>      \r\n          <div style={{ display: \"grid\", gap: \"10px\" }}>\r\n            <ListItem\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                gap: \"10px\",\r\n              }}\r\n            >\r\n              <span style={{ fontSize: \"1rem\", fontWeight: \"400\" }}>\r\n                Theme Mode\r\n              </span>\r\n              <div className={styles.toggle} title=\"toggle dark mode\">\r\n                <label htmlFor=\"checkBox\">\r\n                  <input\r\n                    id=\"checkBox\"\r\n                    type=\"checkbox\"\r\n                    onChange={handleChecked}\r\n                    checked={isDarkTheme}\r\n                  />\r\n                  <span></span>\r\n                </label>\r\n              </div>\r\n            </ListItem>\r\n            <ListItem\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n                gap: \"7px\",\r\n              }}\r\n            >\r\n              <span style={{ fontSize: \"14px\" }}>Support the Dev</span>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"5px\",\r\n                }}\r\n              >\r\n                <a href=\"https://www.buymeacoffee.com/bhargab\" target=\"_\">\r\n                  <img src={BMClogo} alt=\"buy me a coffee\" />\r\n                </a>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  background: `${isDarkTheme ? \"#fff\" : \"#252525\"}`,\r\n                  height: \"1px\",\r\n                  width: \"100px\",\r\n                  borderRadius: \"100px\",\r\n                }}\r\n              ></div>\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                href=\"https://github.com/the-wrong-guy/\"\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  outline: \"none\",\r\n                  color: \"inherit\",\r\n                }}\r\n              >\r\n                <GitHubIcon />\r\n              </a>\r\n            </ListItem>\r\n            <ListItem\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {isServiceWorkerUpdated ? (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{\r\n                    borderRadius: \"1000px\",\r\n                    padding: \"2px 5px\",\r\n                    background: \"#FEB401\",\r\n                    fontWeight: \"500\",\r\n                  }}\r\n                  onClick={updateServiceWorker}\r\n                  type=\"small\"\r\n                >\r\n                  Update\r\n                </Button>\r\n              ) : (\r\n                <div style={{ display: \"block\", textAlign: \"center\" }}>\r\n                  <span\r\n                    style={{\r\n                      color: `${isDarkTheme ? \"peachpuff\" : \"#252525\"}`,\r\n                    }}\r\n                    className={styles.ver}\r\n                  >\r\n                    {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\r\n                    Version :{process.env.REACT_APP_VERSION}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </ListItem>\r\n          </div>\r\n\r\n          <Divider />\r\n        </div>\r\n        <div className={styles.secondDiv}>\r\n          <ListItem\r\n            style={{\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              display: \"grid\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"space-between\",\r\n            }}\r\n          >\r\n            <div className={styles.contactDevItem}>\r\n              <span style={{ fontWeight: \"300\" }}>\r\n                Have some ideas to improve this platform?\r\n              </span>\r\n              <a\r\n                style={{ textDecoration: \"none\" }}\r\n                href=\"mailto:bhargab.contact@gmail.com?subject=Ideas%20or%20Features%20to%20improve%20OpenChat%20%2F%20Bugs\"\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  style={{ textTransform: \"unset\" }}\r\n                  component={motion.div}\r\n                >\r\n                  <span>Contact</span>\r\n                  <motion.svg\r\n                    width=\"30\"\r\n                    height=\"24\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                    color=\"red\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\r\n                    ></path>\r\n                  </motion.svg>\r\n                </Button>\r\n              </a>\r\n            </div>\r\n            <Button\r\n              className={styles.logoutBtn}\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              onClick={handleLogout}\r\n              size=\"small\"\r\n            >\r\n              <span>Logout</span>\r\n              <svg\r\n                width=\"24\"\r\n                height=\"24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                color=\"#000\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\r\n                ></path>\r\n              </svg>\r\n            </Button>\r\n            <span className={styles.credits}>Made with 🖤 and ⌚</span>\r\n          </ListItem>\r\n        </div>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default React.memo(DrawerBox);\r\n","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\store.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Reducer\\reducer.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.types.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\serviceWorkerRegistration.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"86","replacedBy":"96"},{"ruleId":"88","replacedBy":"97"},{"ruleId":"90","replacedBy":"98"},{"ruleId":"92","replacedBy":"99"},{"ruleId":"94","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":19,"column":29,"nodeType":"103","messageId":"104","endLine":19,"endColumn":35},{"ruleId":"101","severity":1,"message":"105","line":11,"column":24,"nodeType":"103","messageId":"104","endLine":11,"endColumn":26},{"ruleId":"101","severity":1,"message":"106","line":6,"column":23,"nodeType":"103","messageId":"104","endLine":6,"endColumn":34},{"ruleId":"101","severity":1,"message":"107","line":75,"column":9,"nodeType":"103","messageId":"104","endLine":75,"endColumn":17},"lines-around-directive",["108"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["108"],[],[],[],[],"no-unused-vars","'realDB' is defined but never used.","Identifier","unusedVar","'db' is defined but never used.","'useDispatch' is defined but never used.","'userInfo' is assigned a value but never used.","padding-line-between-statements"]
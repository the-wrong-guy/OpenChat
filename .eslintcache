[{"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\index.js":"1","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\reportWebVitals.js":"2","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\App.js":"3","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\route.js":"4","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Main Page\\main.jsx":"5","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Login Page\\login.jsx":"6","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\firebase.js":"7","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\navbar.jsx":"8","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Message\\message.jsx":"9","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Loader\\loader.jsx":"10","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\drawer.jsx":"11","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\store.js":"12","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Reducer\\reducer.js":"13","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.types.js":"14","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.js":"15"},{"size":824,"mtime":1611341099338,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1611340898412,"results":"18","hashOfConfig":"17"},{"size":775,"mtime":1611337640937,"results":"19","hashOfConfig":"17"},{"size":430,"mtime":1611212681138,"results":"20","hashOfConfig":"21"},{"size":8071,"mtime":1611816906040,"results":"22","hashOfConfig":"17"},{"size":5002,"mtime":1611217484003,"results":"23","hashOfConfig":"17"},{"size":598,"mtime":1611758197138,"results":"24","hashOfConfig":"17"},{"size":1735,"mtime":1611684776247,"results":"25","hashOfConfig":"17"},{"size":4819,"mtime":1611825463603,"results":"26","hashOfConfig":"17"},{"size":357,"mtime":1611174004334,"results":"27","hashOfConfig":"17"},{"size":7809,"mtime":1611825155239,"results":"28","hashOfConfig":"17"},{"size":335,"mtime":1611340548439,"results":"29","hashOfConfig":"17"},{"size":568,"mtime":1611683618895,"results":"30","hashOfConfig":"17"},{"size":149,"mtime":1611584931432,"results":"31","hashOfConfig":"17"},{"size":363,"mtime":1611585381236,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"11z8bo8",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nng4n0",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\index.js",[],["67","68","69","70","71"],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\reportWebVitals.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\App.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\route.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Main Page\\main.jsx",["72"],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Login Page\\login.jsx",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\firebase.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\navbar.jsx",["73","74","75","76"],"import React, { useState } from \"react\";\r\nimport { AppBar, Toolbar, IconButton, Button } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport styles from \"./navbar.module.scss\";\r\nimport { auth } from \"../../firebase\";\r\nimport logo from \"./logo.png\";\r\nimport DrawerBox from \"./drawer\";\r\nimport { drawerToggle } from \"../../Redux/Action/action\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nexport default function Navbar({ displayName, displayPic }) {\r\n  const dispatch = useDispatch();\r\n  const isDarkTheme = useSelector((state) => state.CONFIG.darkTheme);\r\n  return (\r\n    <AppBar\r\n      style={{\r\n        backgroundColor: `${isDarkTheme ? \"#181818\" : \"rgb(255, 179, 36) \"}`,\r\n      }}\r\n      position=\"static\"\r\n    >\r\n      <Toolbar className={styles.Toolbar}>\r\n        <div className={styles.logoDiv}>\r\n          <img className={styles.logo} src={logo} alt=\"logo\" />\r\n          <span>Open Chat</span>\r\n        </div>\r\n        <div>\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            onClick={() => dispatch(drawerToggle())}\r\n          >\r\n            {displayPic ? (\r\n              <img\r\n                className={styles.displayPic}\r\n                src={displayPic}\r\n                alt=\"display pic\"\r\n              />\r\n            ) : (\r\n              <AccountCircle />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <DrawerBox />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\n// <Button onClick={signOut} variant=\"contained\" size=\"small\">\r\n// Sign Out\r\n// </Button>\r\n","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Message\\message.jsx",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Loader\\loader.jsx",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\drawer.jsx",["77","78"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Drawer, IconButton, Button } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {\r\n  drawerToggle,\r\n  themeToggle,\r\n  setUserInfo,\r\n} from \"../../Redux/Action/action\";\r\nimport { auth } from \"../../firebase\";\r\nimport styles from \"./drawer.module.scss\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\n\r\nconst drawerVariants = {\r\n  hidden: {\r\n    opacity: 0,\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    transition: {\r\n      duration: 2,\r\n      ease: \"easeInOut\",\r\n    },\r\n  },\r\n};\r\n\r\nconst svgVariants = {\r\n  hidden: {\r\n    rotate: -180,\r\n  },\r\n  visible: {\r\n    rotate: 0,\r\n    transition: {\r\n      duration: 1,\r\n    },\r\n  },\r\n};\r\n\r\nconst pathVariants = {\r\n  hidden: {\r\n    opacity: 0,\r\n    pathLength: 0,\r\n    color: \"pink\",\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    pathLength: 1,\r\n    color: \"#000\",\r\n    transition: {\r\n      duration: 2,\r\n      ease: \"easeInOut\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default function DrawerBox() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const isOpen = useSelector((state) => state.CONFIG.drawerOpen);\r\n  const isDarkTheme = useSelector((state) => state.CONFIG.darkTheme);\r\n  const userInfo = useSelector((state) => state.CONFIG.userInfo);\r\n\r\n  const toggleDrawer = () => async (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    await dispatch(drawerToggle());\r\n  };\r\n\r\n  const handleChecked = async () => {\r\n    await dispatch(themeToggle());\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await auth.signOut();\r\n      dispatch(drawerToggle());\r\n      dispatch(setUserInfo(null));\r\n      history.push(\"/login\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      component={motion.div}\r\n      variants={drawerVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      onClose={toggleDrawer(false)}\r\n      anchor=\"left\"\r\n      open={isOpen}\r\n    >\r\n      <List className={styles.list}>\r\n        <div className={styles.firstDiv}>\r\n          <ListItem\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <IconButton onClick={() => dispatch(drawerToggle())}>\r\n              <motion.svg\r\n                width=\"24\"\r\n                height=\"24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"currentColor\"\r\n                color=\"#000\"\r\n                variants={svgVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n              >\r\n                <motion.path\r\n                  d=\"M0 0h24v24H0z\"\r\n                  fill=\"none\"\r\n                  variants={pathVariants}\r\n                ></motion.path>\r\n                <motion.path\r\n                  d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\r\n                  variants={pathVariants}\r\n                ></motion.path>\r\n              </motion.svg>\r\n            </IconButton>\r\n          </ListItem>\r\n          {userInfo && (\r\n            <ListItem className={styles.userInfoItem}>\r\n              <img src={userInfo.photoURL} alt=\"User\" />\r\n              <span>{userInfo.displayName}</span>\r\n            </ListItem>\r\n          )}\r\n          <Divider />\r\n          <ListItem\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              gap: \"10px\",\r\n              padding: \"27px 0\",\r\n            }}\r\n          >\r\n            <span style={{ fontSize: \"1rem\", fontWeight: \"600\" }}>\r\n              Theme Mode\r\n            </span>\r\n            <div className={styles.toggle} title=\"toggle dark mode\">\r\n              <label htmlFor=\"checkBox\">\r\n                <input\r\n                  id=\"checkBox\"\r\n                  type=\"checkbox\"\r\n                  onChange={handleChecked}\r\n                  checked={isDarkTheme}\r\n                />\r\n                <span></span>\r\n              </label>\r\n            </div>\r\n          </ListItem>\r\n          <ListItem style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <span>Follow the Dev</span>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <IconButton>\r\n                <InstagramIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <GitHubIcon />\r\n              </IconButton>\r\n            </div>\r\n          </ListItem>\r\n          <ListItem className={styles.contactDevItem}>\r\n            <span style={{ fontWeight: \"500\" }}>\r\n              Have some ideas to improve this platform?\r\n            </span>\r\n            <a\r\n              style={{ textDecoration: \"none\" }}\r\n              href=\"mailto:bhargab.contact@gmail.com ;?subject=Suggestions%2FFeatures%20that%20will%20improve%20the%20platform\"\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                style={{ textTransform: \"unset\" }}\r\n                component={motion.div}\r\n              >\r\n                <span>Contact</span>\r\n                <motion.svg\r\n                  width=\"30\"\r\n                  height=\"24\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                  color=\"red\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\r\n                  ></path>\r\n                </motion.svg>\r\n              </Button>\r\n            </a>\r\n          </ListItem>\r\n          <Divider />\r\n        </div>\r\n        <div className={styles.secondDiv}>\r\n          <ListItem\r\n            style={{\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              gap: \"10px\",\r\n            }}\r\n          >\r\n            <Button\r\n              className={styles.logoutBtn}\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              onClick={handleLogout}\r\n              size=\"small\"\r\n            >\r\n              <span>Logout</span>\r\n              <svg\r\n                width=\"24\"\r\n                height=\"24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                color=\"#000\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\r\n                ></path>\r\n              </svg>\r\n            </Button>\r\n            <span style={{ marginTop: \"auto\" }}>Made with ❤ and ⌚</span>\r\n          </ListItem>\r\n        </div>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\store.js",["79","80"],"import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport CONFIG from \"./Reducer/reducer\";\r\n\r\nconst rootReducers = combineReducers({\r\n  CONFIG,\r\n});\r\n\r\nconst store = createStore(rootReducers, composeWithDevTools());\r\nexport default store;\r\n","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Reducer\\reducer.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.types.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":20,"column":8,"nodeType":"93","messageId":"94","endLine":20,"endColumn":20},{"ruleId":"91","severity":1,"message":"95","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"96","line":2,"column":39,"nodeType":"93","messageId":"94","endLine":2,"endColumn":45},{"ruleId":"91","severity":1,"message":"97","line":6,"column":10,"nodeType":"93","messageId":"94","endLine":6,"endColumn":14},{"ruleId":"91","severity":1,"message":"98","line":12,"column":34,"nodeType":"93","messageId":"94","endLine":12,"endColumn":45},{"ruleId":"91","severity":1,"message":"95","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"99","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"100","line":1,"column":40,"nodeType":"93","messageId":"94","endLine":1,"endColumn":55},{"ruleId":"91","severity":1,"message":"101","line":1,"column":57,"nodeType":"93","messageId":"94","endLine":1,"endColumn":64},"lines-around-directive",["102"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'recieveAudio' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Button' is defined but never used.","'auth' is defined but never used.","'displayName' is defined but never used.","'useEffect' is defined but never used.","'applyMiddleware' is defined but never used.","'compose' is defined but never used.","padding-line-between-statements"]
[{"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\index.js":"1","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\reportWebVitals.js":"2","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\App.js":"3","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\route.js":"4","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Main Page\\main.jsx":"5","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Login Page\\login.jsx":"6","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\firebase.js":"7","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\navbar.jsx":"8","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Message\\message.jsx":"9","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Loader\\loader.jsx":"10","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\drawer.jsx":"11","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\store.js":"12","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Reducer\\reducer.js":"13","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.types.js":"14","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.js":"15","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\serviceWorkerRegistration.js":"16","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Right-Side-Nav\\rsn.jsx":"17","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Left-Side-Nav\\lsn.jsx":"18","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Left-Side-Nav\\group.jsx":"19"},{"size":1014,"mtime":1612379799663,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1611340898412,"results":"22","hashOfConfig":"21"},{"size":775,"mtime":1612540176299,"results":"23","hashOfConfig":"21"},{"size":430,"mtime":1611212681138,"results":"24","hashOfConfig":"25"},{"size":13532,"mtime":1613314479381,"results":"26","hashOfConfig":"21"},{"size":6894,"mtime":1613291892575,"results":"27","hashOfConfig":"21"},{"size":643,"mtime":1612538258952,"results":"28","hashOfConfig":"21"},{"size":1710,"mtime":1613314691717,"results":"29","hashOfConfig":"21"},{"size":5206,"mtime":1612253197861,"results":"30","hashOfConfig":"21"},{"size":410,"mtime":1612178704898,"results":"31","hashOfConfig":"21"},{"size":10592,"mtime":1613314313461,"results":"32","hashOfConfig":"21"},{"size":309,"mtime":1612339649489,"results":"33","hashOfConfig":"21"},{"size":1157,"mtime":1613249076622,"results":"34","hashOfConfig":"21"},{"size":246,"mtime":1613069473784,"results":"35","hashOfConfig":"21"},{"size":639,"mtime":1613069720939,"results":"36","hashOfConfig":"21"},{"size":5149,"mtime":1612379779806,"results":"37","hashOfConfig":"21"},{"size":3424,"mtime":1613313338275,"results":"38","hashOfConfig":"21"},{"size":12902,"mtime":1613313778593,"results":"39","hashOfConfig":"21"},{"size":1648,"mtime":1613240913255,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"11z8bo8",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nng4n0",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\index.js",[],["82","83","84","85","86"],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\reportWebVitals.js",[],["87","88","89","90","91"],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\App.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\route.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Main Page\\main.jsx",["92"],"/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useEffect, useRef, useMemo } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { Paper, Button, IconButton, Grid, Hidden } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { PhotoCamera } from \"@material-ui/icons\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport WifiOffIcon from \"@material-ui/icons/WifiOff\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { Offline } from \"react-detect-offline\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { auth, db, storage, realDB } from \"../../firebase\";\r\nimport { setUserInfo } from \"../../Redux/Action/action\";\r\nimport Navbar from \"../Layout/navbar\";\r\nimport RightNav from \"../Right-Side-Nav/rsn\";\r\nimport LeftNav from \"../Left-Side-Nav/lsn\";\r\nimport Message from \"../Message/message\";\r\nimport styles from \"./main.module.scss\";\r\nimport Loader from \"../Loader/loader\";\r\n\r\nimport sendAudio from \"../../Message Sounds/among_us_chat_sound.mp3\";\r\n// import recieveAudio from \"../../Message Sounds/facebook_chat_sound.mp3\";\r\n\r\nconst previewImgVariant = {\r\n  in: {\r\n    y: 0,\r\n    opacity: 1,\r\n  },\r\n  out: {\r\n    y: \"100%\",\r\n    opacity: 0,\r\n    transition: {\r\n      duration: 1,\r\n    },\r\n  },\r\n};\r\n\r\nexport default function Main() {\r\n  const isDarkTheme = useSelector((state) => state.CONFIG.darkTheme);\r\n  const palletType = isDarkTheme ? \"dark\" : \"light\";\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: palletType,\r\n    },\r\n  });\r\n  // -----------------Setting Up the Dark Theme------------------------//\r\n\r\n  const dispatch = useDispatch();\r\n  const selectedGrp = useSelector((state) => state.CONFIG.selectedGrp);\r\n  const [senderMsg, setSenderMsg] = useState(\"\");\r\n  const [senderImg, setSenderImg] = useState(null);\r\n  const [imgPreview, setImgPreview] = useState(null);\r\n  const [uploadLoader, setUplaodLoader] = useState(false);\r\n  // const [query, SetQuery] = useState(null);\r\n  const messagesRef = db\r\n    .collection(\"groups\")\r\n    .doc(selectedGrp)\r\n    ?.collection(\"messages\");\r\n  const query = messagesRef.orderBy(\"createdAt\", \"asc\");\r\n  const [messages] = useCollectionData(query, { idField: \"id\" });\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState(() => auth.currentUser);\r\n  const [userDetails, setUserDetails] = useState({\r\n    displayName: \"\",\r\n    displayPhoto: null,\r\n  });\r\n  const history = useHistory();\r\n  const emptyDiv = useRef();\r\n\r\n  useEffect(() => {\r\n    if (emptyDiv.current) {\r\n      emptyDiv.current.scrollIntoView({\r\n        inline: \"center\",\r\n        behavior: \"smooth\",\r\n        alignToTop: false,\r\n      });\r\n    }\r\n  }, [messages]);\r\n\r\n  useEffect(async () => {\r\n    // eslint-disable-next-line no-shadow\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUser(user);\r\n        setUserDetails({\r\n          displayName: user.displayName,\r\n          displayPhoto: user.photoURL,\r\n        });\r\n        setLoading(false);\r\n        history.push(\"/\");\r\n      } else {\r\n        setUser(null);\r\n        history.push(\"/login\");\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line no-shadow\r\n    const unsub = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        realDB.ref(`users/${user.uid}`).on(\"value\", (snapshot) => {\r\n          const data = snapshot.val();\r\n          dispatch(setUserInfo(data));\r\n          console.log(\"dispatch\");\r\n          console.log(data);\r\n        });\r\n      }\r\n    });\r\n    return unsub;\r\n  }, []);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      if (user && (senderMsg !== \"\" || senderImg !== null)) {\r\n        const { uid, photoURL, displayName } = user;\r\n        if (senderMsg !== \"\" && senderImg === null) {\r\n          await db\r\n            .collection(\"groups\")\r\n            .doc(selectedGrp)\r\n            .collection(\"messages\")\r\n            .add({\r\n              text: senderMsg,\r\n              createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n              uid,\r\n              photoURL,\r\n              displayName,\r\n            });\r\n          // eslint-disable-next-line no-undef\r\n          new Audio(sendAudio).play();\r\n          setSenderMsg(\"\");\r\n        } else if (senderMsg === \"\" && senderImg !== null) {\r\n          setUplaodLoader(true);\r\n          const storageRef = storage.ref();\r\n          const fileRef = storageRef.child(\r\n            `GroupMessageImages/${uuidv4()}-${senderImg.name}`\r\n          );\r\n          await fileRef.put(senderImg);\r\n          setSenderImg(null);\r\n          const fileUrl = await fileRef.getDownloadURL();\r\n          await db\r\n            .collection(\"groups\")\r\n            .doc(selectedGrp)\r\n            .collection(\"messages\")\r\n            .add({\r\n              photoMsg: fileUrl,\r\n              createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n              uid,\r\n              photoURL,\r\n              displayName,\r\n            });\r\n          // eslint-disable-next-line no-undef\r\n          new Audio(sendAudio).play();\r\n          setUplaodLoader(false);\r\n        } else if (senderMsg !== \"\" && senderImg !== null) {\r\n          const tempTextmsg = senderMsg;\r\n          setSenderMsg(\"\");\r\n          setUplaodLoader(true);\r\n          const storageRef = storage.ref();\r\n          const fileRef = storageRef.child(\r\n            `GroupMessageImages/${uuidv4()}-${senderImg.name}`\r\n          );\r\n          await fileRef.put(senderImg);\r\n          setSenderImg(null);\r\n          const fileUrl = await fileRef.getDownloadURL();\r\n          await db\r\n            .collection(\"groups\")\r\n            .doc(selectedGrp)\r\n            .collection(\"messages\")\r\n            .add({\r\n              text: tempTextmsg,\r\n              photoMsg: fileUrl,\r\n              createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n              uid,\r\n              photoURL,\r\n              displayName,\r\n            });\r\n          setUplaodLoader(false);\r\n          // eslint-disable-next-line no-undef\r\n          new Audio(sendAudio).play();\r\n        }\r\n      } else {\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleImgChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setSenderImg(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!senderImg) {\r\n      setImgPreview(null);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(senderImg);\r\n    setImgPreview(objectUrl);\r\n    emptyDiv.current.scrollIntoView({ behavior: \"smooth\" });\r\n    // Unmount\r\n    // eslint-disable-next-line consistent-return\r\n    return () => URL.revokeObjectURL(objectUrl);\r\n  }, [senderImg]);\r\n\r\n  const handleImgCancel = () => {\r\n    setSenderImg(null);\r\n    emptyDiv.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Paper\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ when: \"beforeChildren\", staggerChildren: 0.4 }}\r\n        className={styles.container}\r\n        component={motion.div}\r\n      >\r\n        {loading ? (\r\n          <div style={{ width: \"100%\", height: \"100vh\", background: \"#000\" }}>\r\n            <Loader />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Navbar displayPic={userDetails.displayPhoto} />\r\n\r\n            <Offline>\r\n              <div className={styles.offlineDiv}>\r\n                <div>\r\n                  <span>You&apos;re Offline</span>\r\n                  <WifiOffIcon />\r\n                </div>\r\n              </div>\r\n            </Offline>\r\n\r\n            <Grid container className={styles.messageBox}>\r\n              <Hidden only=\"xs\">\r\n                <Grid style={{ height: \"100%\" }} item sm={3} md={3}>\r\n                  <LeftNav />\r\n                </Grid>\r\n              </Hidden>\r\n              <Grid\r\n                item\r\n                sm={6}\r\n                md={6}\r\n                xs={12}\r\n                style={{ height: \"100%\" }}\r\n                className={styles.innnerContainer}\r\n              >\r\n                <main className={styles.main}>\r\n                  {messages &&\r\n                    user &&\r\n                    messages.map((msg) => (\r\n                      <Message key={msg.id} message={msg} />\r\n                    ))}\r\n                  {senderImg && (\r\n                    <AnimatePresence>\r\n                      <motion.div\r\n                        style={{\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          margin: \"10px 0\",\r\n                        }}\r\n                        variants={previewImgVariant}\r\n                        initial=\"out\"\r\n                        animate=\"in\"\r\n                        exit=\"out\"\r\n                        transition={{\r\n                          stiffness: 50,\r\n                          default: { duration: 1 },\r\n                        }}\r\n                      >\r\n                        <motion.div\r\n                          style={{\r\n                            borderColor: `${\r\n                              isDarkTheme ? \"rgb(173, 85, 255)\" : \"#505050\"\r\n                            }`,\r\n                          }}\r\n                          className={styles.imgPreviewDivSend}\r\n                        >\r\n                          {!uploadLoader && (\r\n                            <IconButton\r\n                              onClick={handleImgCancel}\r\n                              className={styles.cancelPreviewBtn}\r\n                            >\r\n                              <CancelIcon />\r\n                            </IconButton>\r\n                          )}\r\n\r\n                          {uploadLoader ? (\r\n                            <div className={styles.uploadLoader}>\r\n                              <img\r\n                                src=\"https://s2.svgbox.net/loaders.svg?ic=elastic-spinner&color=000000\"\r\n                                width=\"32\"\r\n                                height=\"32\"\r\n                                alt=\"uplaod loader\"\r\n                              />\r\n                            </div>\r\n                          ) : (\r\n                            <Button\r\n                              onClick={sendMessage}\r\n                              className={styles.uploadBtn}\r\n                              variant=\"contained\"\r\n                            >\r\n                              Upload\r\n                            </Button>\r\n                          )}\r\n                          <img\r\n                            className={styles.imgPreview}\r\n                            src={imgPreview}\r\n                            alt=\"preview\"\r\n                          />\r\n                        </motion.div>\r\n                      </motion.div>\r\n                    </AnimatePresence>\r\n                  )}\r\n\r\n                  <span\r\n                    style={{ position: \"relative\", width: \"100%\" }}\r\n                    ref={emptyDiv}\r\n                  ></span>\r\n                </main>\r\n                <form className={styles.form} onSubmit={sendMessage}>\r\n                  <Paper elevation={20} className={styles.inputCard}>\r\n                    <input\r\n                      name=\"message\"\r\n                      type=\"text\"\r\n                      value={senderMsg}\r\n                      onChange={(e) => setSenderMsg(e.target.value)}\r\n                      placeholder=\"Enter your message here\"\r\n                    />\r\n                  </Paper>\r\n                  <div>\r\n                    <input\r\n                      accept=\"image/*\"\r\n                      onChange={handleImgChange}\r\n                      className={styles.imgInput}\r\n                      id=\"icon-button-file\"\r\n                      type=\"file\"\r\n                    />\r\n                    <label htmlFor=\"icon-button-file\">\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        aria-label=\"upload picture\"\r\n                        component=\"span\"\r\n                        style={{ position: \"relative\" }}\r\n                      >\r\n                        <PhotoCamera\r\n                          style={{ color: `${senderImg ? \"green\" : \"grey\"}` }}\r\n                        />\r\n                      </IconButton>\r\n                    </label>\r\n                  </div>\r\n                  <Button\r\n                    className={styles.Button}\r\n                    variant=\"contained\"\r\n                    onClick={sendMessage}\r\n                    type=\"submit\"\r\n                  >\r\n                    <img\r\n                      src=\"https://img.icons8.com/plasticine/30/000000/paper-plane.png\"\r\n                      alt=\"button\"\r\n                    />\r\n                  </Button>\r\n                </form>\r\n              </Grid>\r\n              <Hidden only=\"xs\">\r\n                <Grid item sm={3} md={3} style={{ height: \"100%\" }}>\r\n                  <RightNav />\r\n                </Grid>\r\n              </Hidden>\r\n            </Grid>\r\n          </div>\r\n        )}\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Login Page\\login.jsx",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\firebase.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\navbar.jsx",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Message\\message.jsx",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Loader\\loader.jsx",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\drawer.jsx",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\store.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Reducer\\reducer.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.types.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Right-Side-Nav\\rsn.jsx",["93","94","95"],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Left-Side-Nav\\lsn.jsx",["96","97"],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Left-Side-Nav\\group.jsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"98","replacedBy":"108"},{"ruleId":"100","replacedBy":"109"},{"ruleId":"102","replacedBy":"110"},{"ruleId":"104","replacedBy":"111"},{"ruleId":"106","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":2,"column":46,"nodeType":"115","messageId":"116","endLine":2,"endColumn":53},{"ruleId":"113","severity":1,"message":"114","line":1,"column":38,"nodeType":"115","messageId":"116","endLine":1,"endColumn":45},{"ruleId":"113","severity":1,"message":"117","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":16},{"ruleId":"113","severity":1,"message":"118","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":13},{"ruleId":"113","severity":1,"message":"119","line":6,"column":10,"nodeType":"115","messageId":"116","endLine":6,"endColumn":27},{"ruleId":"113","severity":1,"message":"120","line":56,"column":10,"nodeType":"115","messageId":"116","endLine":56,"endColumn":17},"lines-around-directive",["121"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["121"],[],[],[],[],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'Fab' is defined but never used.","'useCollectionData' is defined but never used.","'grpInfo' is assigned a value but never used.","padding-line-between-statements"]
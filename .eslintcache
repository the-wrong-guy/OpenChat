[{"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\index.js":"1","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\reportWebVitals.js":"2","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\App.js":"3","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\route.js":"4","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Main Page\\main.jsx":"5","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Login Page\\login.jsx":"6","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\firebase.js":"7","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\navbar.jsx":"8","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Message\\message.jsx":"9","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Loader\\loader.jsx":"10","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\drawer.jsx":"11","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\store.js":"12","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Reducer\\reducer.js":"13","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.types.js":"14","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.js":"15","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\serviceWorkerRegistration.js":"16"},{"size":1134,"mtime":1612374105030,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1611340898412,"results":"19","hashOfConfig":"18"},{"size":775,"mtime":1611337640937,"results":"20","hashOfConfig":"18"},{"size":430,"mtime":1611212681138,"results":"21","hashOfConfig":"22"},{"size":12081,"mtime":1612372607988,"results":"23","hashOfConfig":"18"},{"size":5076,"mtime":1612251871183,"results":"24","hashOfConfig":"18"},{"size":599,"mtime":1612252018944,"results":"25","hashOfConfig":"18"},{"size":1793,"mtime":1612340549772,"results":"26","hashOfConfig":"18"},{"size":5206,"mtime":1612253197861,"results":"27","hashOfConfig":"18"},{"size":410,"mtime":1612178704898,"results":"28","hashOfConfig":"18"},{"size":9822,"mtime":1612369491576,"results":"29","hashOfConfig":"18"},{"size":309,"mtime":1612339649489,"results":"30","hashOfConfig":"18"},{"size":1006,"mtime":1612364151824,"results":"31","hashOfConfig":"18"},{"size":199,"mtime":1612364037541,"results":"32","hashOfConfig":"18"},{"size":525,"mtime":1612364437325,"results":"33","hashOfConfig":"18"},{"size":5149,"mtime":1612360995754,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11z8bo8",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nng4n0",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\index.js",["71","72","73"],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\reportWebVitals.js",[],["74","75","76","77","78"],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\App.js",[],["79","80","81","82","83"],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\route.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Main Page\\main.jsx",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Login Page\\login.jsx",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\firebase.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\navbar.jsx",["84"],"import React from \"react\";\r\nimport { AppBar, Toolbar, IconButton } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport styles from \"./navbar.module.scss\";\r\nimport logo from \"./logo.png\";\r\nimport DrawerBox from \"./drawer\";\r\nimport { drawerToggle } from \"../../Redux/Action/action\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nexport default function Navbar({ displayName, displayPic }) {\r\n  const dispatch = useDispatch();\r\n  const isDarkTheme = useSelector((state) => state.CONFIG.darkTheme);\r\n  return (\r\n    <AppBar\r\n      style={{\r\n        backgroundColor: `${isDarkTheme ? \"#181818\" : \"rgb(255, 179, 36) \"}`,\r\n      }}\r\n      position=\"static\"\r\n    >\r\n      <Toolbar className={styles.Toolbar}>\r\n        <div className={styles.logoDiv}>\r\n          <img className={styles.logo} src={logo} alt=\"logo\" />\r\n          <span>Open Chat</span>\r\n        </div>\r\n        <div>\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            onClick={() => dispatch(drawerToggle())}\r\n          >\r\n            {displayPic ? (\r\n              <img\r\n                className={styles.displayPic}\r\n                style={{\r\n                  borderColor: `${isDarkTheme ? \"#19e6a1\" : \"#7AAF50\"}`,\r\n                }}\r\n                src={displayPic}\r\n                alt=\"display pic\"\r\n              />\r\n            ) : (\r\n              <AccountCircle />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <DrawerBox />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\n// <Button onClick={signOut} variant=\"contained\" size=\"small\">\r\n// Sign Out\r\n// </Button>\r\n","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Message\\message.jsx",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Loader\\loader.jsx",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\components\\Layout\\drawer.jsx",["85"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Drawer, IconButton, Button } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {\r\n  drawerToggle,\r\n  themeToggle,\r\n  setUserInfo,\r\n  swInit,\r\n} from \"../../Redux/Action/action\";\r\nimport { auth } from \"../../firebase\";\r\nimport styles from \"./drawer.module.scss\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\n\r\nconst drawerVariants = {\r\n  hidden: {\r\n    opacity: 0,\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    transition: {\r\n      duration: 2,\r\n      ease: \"easeInOut\",\r\n    },\r\n  },\r\n};\r\n\r\nconst svgVariants = {\r\n  hidden: {\r\n    rotate: -180,\r\n  },\r\n  visible: {\r\n    rotate: 0,\r\n    transition: {\r\n      duration: 1,\r\n    },\r\n  },\r\n};\r\n\r\nconst pathVariants = {\r\n  hidden: {\r\n    opacity: 0,\r\n    pathLength: 0,\r\n    color: \"#fff\",\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    pathLength: 1,\r\n    color: \"rgb(173, 85, 255)\",\r\n    transition: {\r\n      duration: 2,\r\n      ease: \"easeInOut\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default function DrawerBox() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const isOpen = useSelector((state) => state.CONFIG.drawerOpen);\r\n  const isDarkTheme = useSelector((state) => state.CONFIG.darkTheme);\r\n  const isServiceWorkerUpdated = useSelector(\r\n    (state) => state.CONFIG.serviceWorkerUpdated\r\n  );\r\n  const serviceWorkerRegistration = useSelector(\r\n    (state) => state.CONFIG.serviceWorkerRegistration\r\n  );\r\n  const userInfo = useSelector((state) => state.CONFIG.userInfo);\r\n\r\n  const updateServiceWorker = () => {\r\n    const registrationWaiting = serviceWorkerRegistration.waiting;\r\n\r\n    if (registrationWaiting) {\r\n      registrationWaiting.postMessage({ type: \"SKIP_WAITING\" });\r\n\r\n      registrationWaiting.addEventListener(\"statechange\", (e) => {\r\n        if (e.target.state === \"activated\") {\r\n          // eslint-disable-next-line no-undef\r\n          window.location.reload();\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const toggleDrawer = () => async (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    await dispatch(drawerToggle());\r\n  };\r\n\r\n  const handleChecked = async () => {\r\n    await dispatch(themeToggle());\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await auth.signOut();\r\n      dispatch(drawerToggle());\r\n      dispatch(setUserInfo(null));\r\n      history.push(\"/login\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      component={motion.div}\r\n      variants={drawerVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      onClose={toggleDrawer(false)}\r\n      anchor=\"left\"\r\n      open={isOpen}\r\n    >\r\n      <List className={styles.list}>\r\n        <div className={styles.firstDiv}>\r\n          <ListItem\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <IconButton onClick={() => dispatch(drawerToggle())}>\r\n              <motion.svg\r\n                width=\"24\"\r\n                height=\"24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"currentColor\"\r\n                color=\"#000\"\r\n                variants={svgVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n              >\r\n                <motion.path\r\n                  d=\"M0 0h24v24H0z\"\r\n                  fill=\"none\"\r\n                  variants={pathVariants}\r\n                ></motion.path>\r\n                <motion.path\r\n                  d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\r\n                  variants={pathVariants}\r\n                ></motion.path>\r\n              </motion.svg>\r\n            </IconButton>\r\n          </ListItem>\r\n          {userInfo && (\r\n            <ListItem className={styles.userInfoItem}>\r\n              <img src={userInfo.photoURL} alt=\"User\" />\r\n              <span\r\n                style={{\r\n                  color: `${isDarkTheme ? \"#FFD200\" : \"#78c738\"}`,\r\n                  background: `${isDarkTheme ? \"#617B9E\" : \"#7D7F82\"}`,\r\n                  borderRadius: \"100px\",\r\n                  lineHeight: \"30px\",\r\n                  padding: \"0 7px\",\r\n                  fontSize: \"15px\",\r\n                }}\r\n              >\r\n                {userInfo.displayName}\r\n              </span>\r\n            </ListItem>\r\n          )}\r\n          <Divider />\r\n          <div style={{ display: \"grid\", gap: \"10px\" }}>\r\n            <ListItem\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                gap: \"10px\",\r\n              }}\r\n            >\r\n              <span style={{ fontSize: \"1rem\", fontWeight: \"400\" }}>\r\n                Theme Mode\r\n              </span>\r\n              <div className={styles.toggle} title=\"toggle dark mode\">\r\n                <label htmlFor=\"checkBox\">\r\n                  <input\r\n                    id=\"checkBox\"\r\n                    type=\"checkbox\"\r\n                    onChange={handleChecked}\r\n                    checked={isDarkTheme}\r\n                  />\r\n                  <span></span>\r\n                </label>\r\n              </div>\r\n            </ListItem>\r\n            <ListItem style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <span style={{ fontSize: \"14px\" }}>Follow the Dev</span>\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <a href=\"https://www.facebook.com\">\r\n                  <IconButton className={styles.instaBtn}>\r\n                    <InstagramIcon />\r\n                  </IconButton>\r\n                </a>\r\n                <a href=\"https://www.instagram.com/\">\r\n                  <IconButton className={styles.gitBtn}>\r\n                    <GitHubIcon />\r\n                  </IconButton>\r\n                </a>\r\n              </div>\r\n            </ListItem>\r\n            <ListItem\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {isServiceWorkerUpdated ? (\r\n                <Button onClick={updateServiceWorker} type=\"small\">\r\n                  Update\r\n                </Button>\r\n              ) : (\r\n                <span\r\n                  style={{ color: `${isDarkTheme ? \"peachpuff\" : \"#252525\"}` }}\r\n                  className={styles.ver}\r\n                >\r\n                  Version : 1.0.0\r\n                </span>\r\n              )}\r\n            </ListItem>\r\n          </div>\r\n\r\n          <Divider />\r\n        </div>\r\n        <div className={styles.secondDiv}>\r\n          <ListItem\r\n            style={{\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              display: \"grid\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"space-between\",\r\n            }}\r\n          >\r\n            <div className={styles.contactDevItem}>\r\n              <span style={{ fontWeight: \"300\" }}>\r\n                Have some ideas to improve this platform?\r\n              </span>\r\n              <a\r\n                style={{ textDecoration: \"none\" }}\r\n                href=\"mailto:bhargab.contact@gmail.com?subject=Ideas%20or%20Features%20to%20improve%20OpenChat%20%2F%20Bugs\"\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  style={{ textTransform: \"unset\" }}\r\n                  component={motion.div}\r\n                >\r\n                  <span>Contact</span>\r\n                  <motion.svg\r\n                    width=\"30\"\r\n                    height=\"24\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                    color=\"red\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\r\n                    ></path>\r\n                  </motion.svg>\r\n                </Button>\r\n              </a>\r\n            </div>\r\n            <Button\r\n              className={styles.logoutBtn}\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              onClick={handleLogout}\r\n              size=\"small\"\r\n            >\r\n              <span>Logout</span>\r\n              <svg\r\n                width=\"24\"\r\n                height=\"24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                color=\"#000\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\r\n                ></path>\r\n              </svg>\r\n            </Button>\r\n            <span className={styles.credits}>Made with 🖤 and ⌚</span>\r\n          </ListItem>\r\n        </div>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n","C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\store.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Reducer\\reducer.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.types.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\Redux\\Action\\action.js",[],"C:\\Users\\BHARGAV\\Documents\\JS\\REACT-PROJECTS\\Chat-App\\chat-app\\src\\serviceWorkerRegistration.js",[],{"ruleId":"86","severity":1,"message":"87","line":4,"column":20,"nodeType":"88","messageId":"89","endLine":4,"endColumn":31},{"ruleId":"86","severity":1,"message":"90","line":9,"column":10,"nodeType":"88","messageId":"89","endLine":9,"endColumn":16},{"ruleId":"86","severity":1,"message":"91","line":9,"column":18,"nodeType":"88","messageId":"89","endLine":9,"endColumn":26},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"92","replacedBy":"102"},{"ruleId":"94","replacedBy":"103"},{"ruleId":"96","replacedBy":"104"},{"ruleId":"98","replacedBy":"105"},{"ruleId":"100","replacedBy":"106"},{"ruleId":"86","severity":1,"message":"107","line":11,"column":34,"nodeType":"88","messageId":"89","endLine":11,"endColumn":45},{"ruleId":"86","severity":1,"message":"90","line":15,"column":3,"nodeType":"88","messageId":"89","endLine":15,"endColumn":9},"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'swInit' is defined but never used.","'swUpdate' is defined but never used.","lines-around-directive",["108"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["108"],[],[],[],[],"'displayName' is defined but never used.","padding-line-between-statements"]